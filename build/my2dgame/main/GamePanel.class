package my2dgame.main;

import entity.Player;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

public class GamePanel extends JPanel implements Runnable {
	private static final long serialVersionUID = 1L;
	//Screen Settings
    final int originalTileSize = 16; //16X16 Tile
    final int scale = 3;
    
    public final int tileSize = originalTileSize * scale ; //48X48 Tile
    final int maxScreenCol = 32;
    final int maxScreenRow = 18;
    final int screenWidth = tileSize * maxScreenCol;//768 pixels
    final int screenHeight =tileSize * maxScreenRow;//576 pixels
    //FPS
    int FPS = 60;
    
    KeyHandler keyH = new KeyHandler();
    Thread gameThread;
    Player player = new Player(this,keyH);
     
     
    // Set Player's default Position
    int playerX = 100;
    int playerY = 100;
    int playerSpeed = 4;
    
    public GamePanel() {
        this.setPreferredSize(new Dimension(screenWidth, screenHeight));
        this.setBackground(Color.blue);
        this.setDoubleBuffered(true);
        this.addKeyListener(keyH);
        this.setFocusable(true);
        
    }
    public void startGameThread(){
        gameThread = new Thread(this);
        gameThread.start();
    }
    
    @Override
    public void run() {
        
      double drawInterval = 100000000/FPS; //0.01666 sec
      double delta = 0;
      long lastTime = System.nanoTime();
      long currentTime;
      
      while(gameThread != null){
          
          currentTime = System.nanoTime();
          
          delta += (currentTime -lastTime) / drawInterval;
          
          lastTime = currentTime;
          if(delta >= 1){
              update();
              repaint();
              delta--;
          }
      }
      
    }
    public void update(){
        player.update();
    }
    
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
     
        Graphics2D g2 =(Graphics2D)g;
        player.draw(g2);
        g2.dispose();
    }
}
